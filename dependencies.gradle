buildscript {
    ext {
        kotlin_version = '1.3.20'
        android_plugin_version = '3.3.0'

        pluginDependencies = [
                android: "com.android.tools.build:gradle:$android_plugin_version",
                kotlin : "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version",
                kotlin_android_extensions : "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
        ]
    }
}


ext {
    dagger_version = '2.21'
    support_version = '28.0.0'
    okhttp_version = '3.12.1'
    retrofit_version = '2.5.0'
    gson_version = "2.8.5"
    glide_version = "4.8.0"

    rxjava_version = "2.2.7"
    rxandroid_version = "2.1.1"
    rxkotlin_version = "2.3.0"


    test_support_version = '1.0.2'
    junit_version = "4.12"
    mockito_version = "2.23.4"
    espresso_version = "3.0.2"
    robolectric_version = "4.1"



    kotlinDependencies = [
            stdlib: "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    ]

    supportDependencies = [
            appcompat: "com.android.support:appcompat-v7:$support_version",
            cardview : "com.android.support:cardview-v7:$support_version",
            design   : "com.android.support:design:$support_version"
    ]

    toolkitDependencies = [
            okhttp               : "com.squareup.okhttp3:okhttp:$okhttp_version",
            logging              : "com.squareup.okhttp3:logging-interceptor:$okhttp_version",


            retrofit             : "com.squareup.retrofit2:retrofit:$retrofit_version",
            retrofitGsonConverter: "com.squareup.retrofit2:converter-gson:$retrofit_version",
            gson                 : "com.google.code.gson:gson:$gson_version",

            glide                : "com.github.bumptech.glide:glide:$glide_version",
    ]

    daggerDependencies = [
            dagger    : "com.google.dagger:dagger:$dagger_version",
            compiler  : "com.google.dagger:dagger-compiler:$dagger_version",
            annotation: 'javax.annotation:jsr250-api:1.0'   // Required for @Generated annotation
    ]

    rxDependencies = [
            rxJava    : "io.reactivex.rxjava2:rxjava:$rxjava_version",
            rxAndroid : "io.reactivex.rxjava2:rxandroid:$rxandroid_version",
            rxKotlin  : "io.reactivex.rxjava2:rxkotlin:$rxkotlin_version",
    ]

    unitTestDependencies = [
            junit             : "junit:junit:$junit_version",
            robolectric       : "org.robolectric:robolectric:$robolectric_version",
            mockito           : "org.mockito:mockito-core:$mockito_version",
    ]

    instrumentationTestDependencies = [
            mockito               : "org.mockito:mockito-core:$mockito_version",
            supportRunner         : "com.android.support.test:runner:$test_support_version",
            supportRules          : "com.android.support.test:rules:$test_support_version",
            supportAnnotations    : "com.android.support:support-annotations:$support_version",
            espresso              : "com.android.support.test.espresso:espresso-core:$espresso_version",
            espressoIdlingResource: "com.android.support.test.espresso:espresso-idling-resource:$espresso_version",
            espressoIntents       : "com.android.support.test.espresso:espresso-intents:$espresso_version"
    ]

}

subprojects {
    configurations {
        compile.exclude group: "com.google.code.findbugs", module: "jsr305"
        // Required for Espresso
        compile.exclude group: "commons-logging", module: "commons-logging"
        // Required for Robolectric
        compile.exclude group: "org.apache.httpcomponents", module: "httpclient"
        // Required for Robolectric

    }
}
